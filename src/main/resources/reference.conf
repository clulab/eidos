EidosSystem {
  // These are the default values, since they are in reference.conf.
  language = english
  entityFinders = ["gazetteer", "rulebased"]
  keepStatefulConcepts = false
  // Dirs are expected to be files, and usually begin with .
  cacheDir = ./cache
  domain = wm
  // Paths are expected to be resources, and usually begin with /
  path = /org/clulab/${EidosSystem.domain}/eidos/${EidosSystem.language}

  masterRulesPath = ${EidosSystem.path}/grammars/master.yml
     taxonomyPath = ${EidosSystem.path}/grammars/taxonomy.yml
      hedgingPath = ${EidosSystem.path}/confidence/hedging.txt

  useLexicons = true

  conceptExpander = { include required("englishConceptExpander.conf") }
}

filtering {
  path = ${EidosSystem.path}/filtering

    stopWordsPath = ${filtering.path}/stops.txt
  transparentPath = ${filtering.path}/transparent.txt
}

actions {
  taxonomyPath = ${EidosSystem.taxonomyPath}
  useExpansion = true
  expander = { include required("englishActionsExpander.conf") }
}

apps {
  inputDirectory = "."
  outputDirectory = "."
  inputFileExtension = ".txt"
  exportAs = ["serialized", "jsonld", "mitre"] // valid modes: jsonld, mitre, serialized
  groundTopN = 5

  ontologymapper {
    dir = ./src/main/resources/org/clulab/${EidosSystem.domain}/eidos/${EidosSystem.language}/ontologies
    outfile = ${apps.ontologymapper.dir}/un_to_indicators.tsv
  }
}

ontologies {
  // W2V
  useGrounding = false
  wordToVecPath = ${EidosSystem.path}/w2v/vectors.txt
  //wordToVecPath = ${EidosSystem.path}/w2v/glove.840B.300d.txt
  topKNodeGroundings = 10
  // Caching, for quick loading, language dependent
  cacheDir = ${EidosSystem.cacheDir}/${EidosSystem.language}
  useCacheForOntologies = false
  useCacheForW2V = ${ontologies.useCacheForOntologies}
  includeParents = true

  // Activated Ontologies
  ontologies = ["un", "wdi", "fao", "props", "mitre12", "who", "interventions"] // , "icasa", "mesh"]
  path = ${EidosSystem.path}/ontologies

  // Primary
    // Note that these first two are included via the build.sbt libraryDependencies on WorldModelers % Ontologies.
    wm               = ${ontologies.path}/wm_metadata.yml
    wm_flattened     = ${ontologies.path}/wm_with_flattened_interventions_metadata.yml
    wm_compositional = ${ontologies.path}/wm_compositional_metadata.yml
    interventions    = ${ontologies.path}/interventions_metadata.yml
    // Legacy
    un               = ${ontologies.path}/un_ontology.yml
    props            = ${ontologies.path}/un_properties.yml
    // Plugins
    interventions    = ${ontologies.path}/interventions_metadata.yml
    // Indicators
    mitre12          = ${ontologies.path}/mitre12_indicators.yml
    who              = ${ontologies.path}/who_ontology.yml
    MaaS-model       = ${ontologies.path}/MaaS-model-ontology-edited.yaml
    MaaS-parameter   = ${ontologies.path}/MaaS-parameter-ontology.yaml
    MaaS-variable    = ${ontologies.path}/MaaS-variable-ontology.yaml
    // Variables
    icasa            = ${ontologies.path}/icasa.yml
    // Other
    mesh             = ${ontologies.path}/mesh_ontology.yml
}

ruleBasedEntityFinder {
  path = ${EidosSystem.path}/grammars

  entityRulesPath = ${ruleBasedEntityFinder.path}/entities/grammar/entities.yml
   avoidRulesPath = ${ruleBasedEntityFinder.path}/avoidLocal.yml
}

geonorm {
  geoNamesIndexURL = "http://clulab.cs.arizona.edu/models/geonames+woredas.zip"
  geoNamesIndexDir = ${EidosSystem.cacheDir}/geonames/index
}

timenorm {
  timeRegexPath = ${EidosSystem.path}/context/timenorm-regexes.txt
}

gazetteers {
  // This may not begin with a leading /.
  path = org/clulab/${EidosSystem.domain}/eidos/${EidosSystem.language}/lexicons
  lexicons = [
    ${gazetteers.path}/Quantifier.tsv,
    ${gazetteers.path}/Property.tsv,
    ${gazetteers.path}/Location.tsv
  ]
}

adjectiveGrounder {
  useAdjectives = true
  path = ${EidosSystem.path}/quantifierKB

  domainParamKBPath = ${adjectiveGrounder.path}/domain_parameters.kb
   quantifierKBPath = ${adjectiveGrounder.path}/gradable_adj_fullmodel.kb
}

coref {
    useCoref = true
    corefType = "causalBasic"
    taxonomyPath = ${EidosSystem.taxonomyPath}
}