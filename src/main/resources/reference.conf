EidosSystem {
  // These are the default values, since they are in reference.conf.
  language = english
  entityFinders = ["gazetteer", "rulebased"]
  keepStatefulConcepts = false
  keepMigrationEvents = false
  // Dirs are expected to be files, and usually begin with .
  cacheDir = ./cache
  // Paths are expected to be resources, and usually begin with /
  path = /org/clulab/wm/eidos/${EidosSystem.language}

  masterRulesPath = ${EidosSystem.path}/grammars/master.yml
     taxonomyPath = ${EidosSystem.path}/grammars/taxonomy.yml
      hedgingPath = ${EidosSystem.path}/confidence/hedging.txt

  useLexicons = true

  conceptExpander = { include required("englishConceptExpander.conf") }
}

filtering {
  path = ${EidosSystem.path}/filtering

    stopWordsPath = ${filtering.path}/stops.txt
  transparentPath = ${filtering.path}/transparent.txt
}

actions {
  useCoref = true
  corefType = "causalBasic"
  taxonomyPath = ${EidosSystem.taxonomyPath}
  useExpansion = true

  expander = { include required("englishActionsExpander.conf") }
}

apps {
  inputDirectory = "."
  outputDirectory = "."
  inputFileExtension = ".txt"
  exportAs = ["serialized", "jsonld", "mitre"] // valid modes: jsonld, mitre, serialized
  groundTopN = 5

  ontologymapper {
    dir = ./src/main/resources/org/clulab/wm/eidos/${EidosSystem.language}/ontologies
    outfile = ${apps.ontologymapper.dir}/un_to_indicators.tsv
  }
}

ontologies {
  // W2V
  useW2V = false
  wordToVecPath = ${EidosSystem.path}/w2v/vectors.txt
  //wordToVecPath = ${EidosSystem.path}/w2v/glove.840B.300d.txt
  topKNodeGroundings = 10
  // Caching, for quick loading, language dependent
  cacheDir = ${EidosSystem.cacheDir}/${EidosSystem.language}
  useCache = false
  includeParents = true

  // Activated Ontologies
  ontologies = ["un", "wdi", "fao", "props", "mitre12", "who", "interventions"] // , "icasa", "mesh"]
  path = ${EidosSystem.path}/ontologies

  // Legacy
  un            = ${ontologies.path}/un_ontology.yml
  props         = ${ontologies.path}/un_properties.yml
  // Plugins
  interventions = ${ontologies.path}/interventions_metadata.yml
  // Indicators
  mitre12       = ${ontologies.path}/mitre12_indicators.yml
  who           = ${ontologies.path}/who_ontology.yml
  // Variables
  icasa         = ${ontologies.path}/icasa.yml
  // Other
  mesh          = ${ontologies.path}/mesh_ontology.yml
  wdi           = ${ontologies.path}/wdi_ontology.yml
  fao           = ${ontologies.path}/fao_variable_ontology.yml
}

ruleBasedEntityFinder {
  path = ${EidosSystem.path}/grammars

  entityRulesPath = ${ruleBasedEntityFinder.path}/entities/grammar/entities.yml
   avoidRulesPath = ${ruleBasedEntityFinder.path}/avoidLocal.yml
}

geoparser {
  path = ${EidosSystem.path}/context

  geoNormModelPath = /org/clulab/geonorm/model/geonorm_model.dl4j.zip

  geoWord2IdxPath = ${geoparser.path}/word2idx_file.txt
    geoLoc2IdPath = ${geoparser.path}/geo_dict_with_population_SOUTH_SUDAN.txt
}

gazetteers {
  // This may not begin with a leading /.
  path = org/clulab/wm/eidos/${EidosSystem.language}/lexicons

  quantifierPath = ${gazetteers.path}/Quantifier.tsv
  propertiesPath = ${gazetteers.path}/Property.tsv
   locationsPath = ${gazetteers.path}/Location.tsv

  lexicons = [
    ${gazetteers.quantifierPath},
    ${gazetteers.propertiesPath},
    ${gazetteers.locationsPath}
  ]
}

adjectiveGrounder {
  path = ${EidosSystem.path}/quantifierKB

  domainParamKBPath = ${adjectiveGrounder.path}/domain_parameters.kb
   quantifierKBPath = ${adjectiveGrounder.path}/gradable_adj_fullmodel.kb
}
