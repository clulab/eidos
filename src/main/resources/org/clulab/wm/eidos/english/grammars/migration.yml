vars: org/clulab/wm/eidos/english/grammars/vars.yml


rules:

  - name: migration-verbs
    priority: 2
    example: "Since the beginning of September 2016, almost 40,000 refugees arrived in Ethiopia from South Sudan as of mid-November."
    label: HumanMigration
    action: migrationActionFlow # parse out quantity as an attachment
    pattern: |
      trigger = [lemma=/^(go|come|flee|travel|transit|return|leave|pour|cross|move|head)/ & tag=/^VB/]
      group: Entity? = (<xcomp? (>/${agents}/|<acl) >nmod_of? >conj_and?) [!entity="LOCATION"]
      moveTo: Location? = (</${agents}/ >nmod_in)|(>dobj? >nmod_into)|(>nmod_from? (>nmod_to|>nmod_into))|>nmod_for| (>nmod_between >conj_and >compound?)|(<acl >nmod_in)|(>advmod >nmod_towards) | <acl <nmod_in <xcomp nsubj
      moveFrom: Location? = (>nmod_from >nmod_in?)|>nmod_out_of|>nmod_between|(>dobj >conj_or?)|((>/${agents}/|<acl) >nmod_from)|(>nmod_from >nmod_of)|(>nsubj >compound) | nmod_from dep compound?
      moveThrough: Location? = </${agents}/? (>nmod_via|>nmod_through)
      timeStart: Time? = >nmod_since|>nmod_after|(>advcl_since >nmod_in)
      timeEnd: Time? = >nmod_as_of|>nmod_until|>nmod_by
      time: Time? = (>nmod_during >nummod)|>nmod_in | >nmod_in|<acl? <nmod_in? <xcomp nmod_in | <"acl:relcl" | nmod_between


  - name: migration-arrive
    # arrive behaves differently with nmod_in than other migration verbs
    priority: 2
    example: "Since the beginning of September 2016, almost 40,000 refugees arrived in Ethiopia from South Sudan as of mid-November."
    label: HumanMigration
    action: migrationActionFlow
    pattern: |
      trigger = [lemma=arrive & tag=/^VB/]
      group: Entity? = ((<xcomp? (>/${agents}/|<acl) >nmod_of? >conj_and?)|(<acl <nmod_with >nsubjpass)|nmod_to) [!entity="LOCATION"]
      moveTo: Location? = (</${agents}/? >nmod_in)|(>dobj? >nmod_into)|(>nmod_from? (>nmod_to|>nmod_into))|>nmod_for| (>nmod_between >conj_and >compound?)|(<acl? >nmod_in)|(>advmod >nmod_towards) | (nsubj <dobj <xcomp nmod_in)
      moveFrom: Location? = (>nmod_from >nmod_in?)|>nmod_out_of|>nmod_between|(>dobj >conj_or?)|((>/${agents}/|<acl) >nmod_from)|(>nmod_from >nmod_of) | nsubj compound
      moveThrough: Location? = </${agents}/? (>nmod_via|>nmod_through)
      timeStart: Time? = >nmod_since nmod_of?|>nmod_after|(>advcl_since >nmod_in)
      timeEnd: Time? = >nmod_as_of|>nmod_until|>nmod_by
      time: Time? = (>nmod_during >nummod)|>nmod_in|nmod_between
      #having nmod_of? in time start results in two overlapping migration events, but with slightly different times. todo: The second event needs to be filtered out.


  - name: migration-displace
    # displace acts differently a lot of the time
    priority: 2
    example: "For many FGD respondents from Greater Equatoria, this was the second or even third time they or their family had been displaced out of South Sudan; many reported leaving during the 2013 displacement crisis and/or in the second Sudanese Civil War (1983-2006)."
    label: HumanMigration
    action: migrationActionFlow
    pattern: |
      trigger = [lemma=displace & tag=/^VB/]
      group: Entity? = (<acl|>dobj|(>advcl_as >nmod_by)|(>ccomp? >/${agents}/)|(>/${agents}/ >nmod_of))
      moveTo: Location? = >nmod_in|>nmod_into|>nmod_to|(>advcl_as >nmod_by >nmod_in)|(>ccomp >/${agents}/ >nmod_in)|(>nmod_between >conj_and)|(>advmod >nmod_towards)
      moveFrom: Location? = (>nmod_from|>nmod_out_of)
      timeStart: Time? = >nmod_since
      timeEnd: Time? = (>nmod_as_of|>nmod_until|>nmod_by)
      time: Time? = >nmod_during|(>nmod_between >conj_and?)


  - name: migration-make-way
    # for idiomatic 'make X's way'
    priority: 2
    example: "IDPs from Uror also made their way to Duk, which hosted 24% of IDPs in March compared to 10% in February."
    label: HumanMigration
    action: migrationActionFlow
    pattern: |
      trigger = [lemma=make & outgoing=dobj] (?= [word=/.*/]{,5} [lemma=way])
      group: Entity? = <xcomp? (>/${agents}/|<acl)
      moveTo: Location? = (>nmod_in|>nmod_into|>nmod_to|>nmod_for| >nmod_between >conj_and)
      moveFrom: Location? = (>nmod_from|>nmod_out_of|>nmod_between|>dobj >conj_or?|>/${agents}/ >nmod_from)
      moveThrough: Location? = (</${agents}/ (>nmod_via|>nmod_through))
      timeStart: Time? = (>nmod_since|>nmod_after)|(>advcl_since >nmod_in)
      timeEnd: Time? = (>nmod_as_of|>nmod_until|>nmod_by)
      time: Time? = (>nmod_during >nummod|>nmod_in)


  - name: migration-receive-host
    # receive takes groups as dobj, destination as agents
    priority: 2
    example: "In March, Bor Town continued to receive IDPs displaced from the Equatorias, in particular Yei and populations returning from refugee settlements in Uganda."
    label: HumanMigration
    action: migrationActionFlow
    pattern: |
      trigger = [lemma=/receive|host|accommodate/ & tag=/^VB/]
      group: Entity? = >dobj
      moveTo: Location? = <xcomp? (>nmod_to|>nmod_for|(>nmod_between >conj_and)|>/${agents}/)
      moveFrom: Location? = (>nmod_from|>nmod_out_of|>nmod_between|>dobj >conj_or?|>/${agents}/ >nmod_from)|(>dobj >acl >nmod_from) | dobj compound
      moveThrough: Location? = (</${agents}/ (>nmod_via|>nmod_through))
      timeStart: Time? = (>nmod_since|>nmod_after)|(>advcl_since >nmod_in)
      timeEnd: Time? = (>nmod_as_of|>nmod_until|>nmod_by)
      time: Time? = (>nmod_during >nummod|>nmod_in|<xcomp nmod_in)


  - name: migration-settle
    priority: 2
    example: "Based on regular visits by REACH to sites in Bor Town where IDPs have settled, as well as the continuous inflow of new arrivals, a conservative estimate would suggest that the number of IDPs from the Equatorias in Bor Town is likely to have been around 12,000-15,000 individuals at the end of March."
    label: HumanMigration
    action: migrationActionFlow
    pattern: |
      trigger = [lemma=settle & tag=/^VB/]
      group: Entity? = <advcl_before? >/${agents}/
      moveTo: Location? = <"acl:relcl"|>nmod_in


  - name: migration-pass
  # "pass through"
    priority: 2
    example: "Interviewed KIs passed through Nimule and Juba before settling in Bor."
    label: HumanMigration
    action: migrationActionFlow
    pattern: |
      trigger = [lemma=pass & tag=/^VB/]
      group: Entity? = >/${agents}/
      moveTo: Location? = <"acl:relcl"|>nmod_on >nmod_to
      moveThrough: Location? = >nmod_through|>dobj


  - name: migration-reach
    priority: 2
    example: "* Departures: 375 individuals were recorded leaving Juba (52%) of which the vast majority intended to reach refugees camps in Uganda (75%)"
    label: HumanMigration
    action: migrationActionFlow
    pattern: |
      trigger = [lemma=/reach/ & tag=/^VB/]
      group: Entity? = <xcomp? (>/${agents}/|<acl) >nmod_of?
      moveTo: Location? = >dobj|>nmod_in
      moveFrom: Location? = (>nmod_from >nmod_in?)|>nmod_out_of|>nmod_between|(>/${agents}/ >nmod_from)
      moveThrough: Location? = </${agents}/ (>nmod_via|>nmod_through)
      timeStart: Time? = >nmod_since|>nmod_after|(>advcl_since >nmod_in)
      timeEnd: Time? = >nmod_as_of|>nmod_until|>nmod_by
      time: Time? = (>nmod_during >nummod)|>nmod_in


  - name: migration-nouns
    priority: 2
    example: "Additional cross border movement to Ethiopia occurs via Pagak."
    label: HumanMigration
    action: migrationActionFlow
    pattern: |
      trigger = [lemma=/(movement|outflow|inflow|displacement|exodus)/ & tag=/^NN/]
      group: Entity? = <xcomp? (>/${agents}/|<acl)|>nmod_of
      moveTo: Location? = (<dobj|<nmod_in)? (>nmod_in|>nmod_into|>nmod_to|(>nmod_in [lemma=particular] >nmod_to)|>acl_to|>nmod_for|(>nmod_between >conj_and)|(</${agents}/ >nmod_toward >nmod_in?)) >dobj?
      moveFrom: Location? = (>nmod_of? >nmod_from|>nmod_out_of|>nmod_between|>dobj|>/${agents}/ >nmod_from)|(<dobj >/${agents}/)|(>nmod_within (?= case [lemma=from]) >conj_and?)
      moveThrough: Location? = (</${agents}/ (>nmod_via|>nmod_through|>nmod_along))
      timeStart: Time? = >advcl_since? (<dobj? >nmod_since)
      timeEnd: Time? = (>nmod_as_of|>nmod_until|>nmod_by)
      time: Time? = (<dobj? (>nmod_during >nummod|>nmod_in))|(</${agents}/ >nmod_in)

  - name: migration-originated-from
    priority: 2
    example: " The new arrivals originated mainly from Upper Nile State (Nasir, Longechuk or Mathiang, Ulang and Maiwut Counties) and Jonglei State (Uror, Akobo and Ayod Counties)."
    label: HumanMigration
    action: migrationActionFlow
    pattern: |
      trigger = [lemma=/(originate)/ & tag=/^VB/]
      group: Entity? = nsubj nmod_of?
      moveFrom: Location? = (>nmod_from|>nmod_out_of|>nmod_within) dep?

  - name: migration-destination-dep
    priority: 2
    example: "* Arrivals: 358 individuals came from Uganda citing Juba as intended destination"
    label: HumanMigration
    action: migrationActionFlow
    pattern: |
      trigger = [lemma=destination & tag=/^NN/]
      group: Concept = <nmod_with <nmod_from nsubj nummod
      moveFrom: Location = <nmod_with
      moveTo: Location = <nsubj >conj_and? | dep compound | dep? nmod_in?

  - name: migration-destination-left
    priority: 2
    example: "* Arrivals: 358 individuals came from Uganda citing Juba as intended destination"
    label: HumanMigration
    type: token
    action: migrationActionFlow
    pattern: |
      [!word=from] @moveTo:Location+ (and @moveTo:Location+)? []{,5}? (?<trigger> [lemma=destination])

  - name: migration-destination-right
    priority: 2
    example: "* Arrivals: 36 individuals moved from Juba with the main destinations being Bor South in Jonglei State (24 individuals, or 67%) and Awerial (12 individuals, or 33%) in Lakes State"
    label: HumanMigration
    type: token
    action: migrationActionFlow
    pattern: |
      (?<trigger> [lemma=destination]) [!word=from]{,5}? @moveTo:Location+ (and @moveTo:Location+)?


  # hackathon rules

  - name: migration-arrival
    priority: 2
    example: "* Arrivals: 36 individuals moved from Juba with the main destinations being Bor South in Jonglei State (24 individuals, or 67%) and Awerial (12 individuals, or 33%) in Lakes State. Between 1 and 25 March 2017, 13,225 South Sudanese refugees arrived in Gambella, Ethiopia, bringing the total number of new arrivals since September 2016 to 74,825."
    label: HumanMigration
    action: migrationActionFlow
    pattern: |
      trigger = [lemma=/(arrival)/ & tag=/^NN/]
      group: Concept? = (<nmod_of <dobj >nmod_to)
      timeStart: Time? = <nmod_of <dobj >nmod_since




  - name: migration-relocate
    priority: 2
    example: "Except 1,796 individuals who are awaiting relocation in Pagak, all the new arrivals have been relocated to Nguenyyiel refugee camp."
    label: HumanMigration
    action: migrationActionFlow
    pattern: |
      trigger = [lemma=/relocate/ & tag=/^VB/]
      group: Entity? = (<xcomp? (>/${agents}/|<acl) >nmod_of? >conj_and?) [!entity="LOCATION"]
      moveTo: Location? = (</${agents}/ >nmod_in)|(>dobj? >nmod_into)|(>nmod_from? (>nmod_to compound?|>nmod_into))|>nmod_for| (>nmod_between >conj_and >compound*)|(<acl >nmod_in)|(>advmod >nmod_towards)|(>nmod_to >compound)
      moveFrom: Location? = (>nmod_from >nmod_in?)|>nmod_out_of|>nmod_between|(>dobj >conj_or?)|((>/${agents}/|<acl) >nmod_from)|(>nmod_from >nmod_of)
      moveThrough: Location? = </${agents}/? (>nmod_via|>nmod_through)
      timeStart: Time? = >nmod_since|>nmod_after|(>advcl_since >nmod_in)
      timeEnd: Time? = >nmod_as_of|>nmod_until|>nmod_by
      time: Time? = (>nmod_during >nummod?)|>nmod_in

  - name: migration-relocation
    priority: 2
    example: "Additional cross border movement to Ethiopia occurs via Pagak."
    label: HumanMigration
    action: migrationActionFlow
    pattern: |
      trigger = [lemma=/(relocation)/ & tag=/^NN/]
      group: Entity? = (<xcomp? (>/${agents}/|<acl)|>nmod_of)|(<dobj >/${agents}/)
      moveTo: Location? = (<dobj|<nmod_in)? (>nmod_in|>nmod_into|>nmod_to|(>nmod_in [lemma=particular] >nmod_to)|>acl_to|>nmod_for|(>nmod_between >conj_and)|(</${agents}/ >nmod_toward >nmod_in?)) >dobj?
      moveFrom: Location? = (>nmod_of? >nmod_from|>nmod_out_of|>nmod_between|>dobj|>/${agents}/ >nmod_from)|(<dobj >/${agents}/)|(>nmod_within (?= case [lemma=from]) >conj_and?)
      moveThrough: Location? = (</${agents}/ (>nmod_via|>nmod_through|>nmod_along))
      timeStart: Time? = >advcl_since? (<dobj? >nmod_since)
      timeEnd: Time? = (>nmod_as_of|>nmod_until|>nmod_by)
      time: Time? = (<dobj? (>nmod_during >nummod|>nmod_in))|(</${agents}/ >nmod_in)

#very specific; clashes with the rate rule
#  - name: migration-jump
#    priority: 2
#    example: "The daily arrival rate has significantly jumped from 103 person in February and 199 in February to 660 so far in March."
#    label: HumanMigration
#    action: migrationActionFlow
#    pattern: |
#      trigger = [lemma=/jump/ & tag=/^VB/]
#      groupModifier: Time = nsubj amod
#      group: Concept? = nmod_from nummod | nmod_in | nmod_to
#      time: Time? = advmod? nmod_in

  - name: migration-rate
    priority: 2
    example: "Of these, 3,967 arrived in the week of 6 to 11 March, representing a daily average arrival rate of 660 people."
    label: HumanMigration
    action: migrationActionFlow
    pattern: |
      trigger = [lemma=/rate|average/ & tag=/^NN|JJ/]
      group: Concept? = <nsubj | nmod_of nummod | <nsubj nmod_at nummod
      groupModifier: Time = amod
      moveTo: Location? = (<dobj|<nmod_in)? (>nmod_in|>nmod_into|>nmod_to|(>nmod_in [lemma=particular] >nmod_to)|>acl_to|>nmod_for|(>nmod_between >conj_and)|(</${agents}/ >nmod_toward >nmod_in?)) >dobj?
      moveFrom: Location? = (>nmod_of? >nmod_from|>nmod_out_of|>nmod_between|>dobj|>/${agents}/ >nmod_from)|(<dobj >/${agents}/)|(>nmod_within (?= case [lemma=from]) >conj_and?)
      moveThrough: Location? = (</${agents}/ (>nmod_via|>nmod_through|>nmod_along))
      timeStart: Time? = >advcl_since? (<dobj? >nmod_since)
      timeEnd: Time? = (>nmod_as_of|>nmod_until|>nmod_by)
      time: Time? = </${agents}/ /advmod|nmod_in/


  - name: migration-remain
    priority: 2
    example: "192 level1 registered new arrivals remain in Pagak, awaiting relocation."
    label: HumanMigration
    action: migrationActionFlow
    pattern: |
      trigger = [lemma=/remain/]
      group: Concept? = <ccomp nsubj nummod
      moveTo: Location? = nmod_in
      #todo: this rule is likely not complete


  - name: migration-according_to
    priority: 2
    example: "According to a recent sample survey conducted in Pagak..."
    label: HumanMigration
    action: migrationActionFlow
    pattern: |
      trigger = [lemma=/accord/ & tag=/VBG/]
      moveTo: Location = <case acl nmod_in

  #very specific
  - name: migration-total_of
    priority: 2
    example: "Latest developments: Between 1 February and 11 March 2017, a total of 12,828 refugees crossed through Pagak, 56.6% (7,258) of whom were registered in the first 11 days of March 2017."
    label: HumanMigration
    action: migrationActionFlow
    pattern: |
      trigger = [lemma=/total/ & tag=/NN/]
      group: Concept = <mwe <"det:qmod" nummod
      time: Time = <mwe <"det:qmod" <appos

  - name: migration-bring_number_to
    priority: 2
    example: "This brings the number of refugees who have arrived in Ethiopia since September 2016 to 68,858."
    label: HumanMigration
    type: token
    action: migrationActionFlow
    pattern: |
      (?<trigger> [lemma=bring] [lemma = the]? []? [lemma = number]) []* [lemma = to] @group:Concept

  - name: migration-bring_number_to2
    priority: 2
    example: "Between 1 and 30 March 2017, 16,274 South Sudanese refugees arrived in Gambella, Ethiopia, bringing the total number of new arrivals since September 2016 to 77,874."
    label: HumanMigration
#    type: token
    action: migrationActionFlow
    pattern: |
      trigger = [lemma=/bring/ & tag=/VBG/]
      group: Concept = nmod_to
      timeStart: Time = nmod_since
      moveTo: Location = <xcomp nmod_in

# TODO:
# I think i need to first make the geolocations proper mentions?
# then modify the trigger of the locations
# do the same for the times
